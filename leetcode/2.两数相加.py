#  _*_ coding: utf-8 _*_
"""
    给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。

    如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。

    您可以假设除了数字 0 之外，这两个数都不会以 0 开头。

    示例：

    输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)
    输出：7 -> 0 -> 8
    原因：342 + 465 = 807
"""

class Solution:
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        # 这里开始不做L1，L2非空判断，题义表面名为非空链表
        # 记录是否需要增加新节点，或在链表下一个节点时候需要加1，同时记录链表同级节点的和
        carry = 0
        # 这里执行的顺序是res = ListNode(0),pre = res
